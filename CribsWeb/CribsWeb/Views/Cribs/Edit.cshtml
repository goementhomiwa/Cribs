@model Cribs.Web.ViewModels.EditCribViewModel
@{
    ViewBag.Title = "Edit";
    var image1 = string.Empty;
    var image2 = string.Empty;
    var supportingImages = (List<string>) ViewBag.SupportingImages;
    if (supportingImages.Count != 0)
    {
        image1 = string.Format("data:image/gif;base64,{0}", supportingImages.First());
    }

    if (supportingImages.Count == 2)
    {
        image2 = string.Format("data:image/gif;base64,{0}", supportingImages.First());
    }
}
<div class="row" id="Contents">
    @using (Html.BeginForm("Edit", "Cribs", FormMethod.Post, new {id = "CribEditForm", role = "form", enctype = "multipart/form-data"}))
    {
        @Html.AntiForgeryToken()
        <div class="col m6 s12 offset-m3">
            <div class="row">
                <div class="col s12 m12 l12">
                    <h4>Edit</h4>
                    <hr/>
                </div>
            </div>
            <div class="row">
                <div class="input-field  col s12 m6 l6">
                    @* ReSharper disable once Html.IdNotResolved *@
                    <label for="Title">Title</label>
                    @Html.EditorFor(m => m.Title, new {@class = "validate"})
                </div>
                <div class="input-field col s12 m6 l6">
                    @* ReSharper disable once Html.IdNotResolved *@
                    <label for="MonthlyRent">Monthly Rent</label>
                    @Html.EditorFor(m => m.MonthlyRent)
                </div>
            </div>
            <div class="row">
                <div class="input-field  col s12 m6 l6">
                    @Html.LabelFor(x => x.AvailableDate)
                    <input id="AvailableDate" name="AvailableDate" type="date" class="datepicker" value="@Model.AvailableDate">
                </div>
                <div class="input-field col s12 m6 l6">
                    @* ReSharper disable once Html.IdNotResolved *@
                    <label for="NumberOfRooms">Number of rooms</label>
                    @Html.EditorFor(m => m.NumberOfRooms)
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12 m12 l12">
                    @* ReSharper disable once Html.IdNotResolved *@
                    <label for="Location">Location</label>
                    @Html.EditorFor(m => m.Location)
                </div>
            </div>
            <div class="row">
                <div class="input-field  col s12 m12 l12">
                    <label for="Description">Description</label>
                    <textarea id="Description" name="Description" class="materialize-textarea" length="500">@Model.Description</textarea>
                </div>
            </div>
            <fieldset>
                <legend class="cyan-text">Edit Photos</legend>
                <ul class="collapsible" data-collapsible="accordion">
                    <li>
                        <div class="collapsible-header">
                            <i class="material-icons">edit</i>Cover
                        </div>
                        <div class="collapsible-body">
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                <input class="file-path validate" type="text"/>
                                <div class="btn">
                                    <span>Add</span>
                                    @Html.TextBoxFor(m => m.MainImage, new {type = "file"})
                                </div>
                            </div>
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                <img id="ImagePreview_MainImage" src="@string.Format("data:image/gif;base64,{0}", ViewBag.CoverImage)" class="responsive-img materialboxed"/>
                            </div>

                        </div>
                    </li>
                    <li>
                        <div class="collapsible-header">
                            <i class="material-icons">edit</i>1
                        </div>
                        <div class="collapsible-body">
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                <input class="file-path validate" type="text"/>
                                <div class="btn">
                                    <span>Add</span>
                                    @Html.TextBoxFor(m => m.Image1, new {type = "file"})
                                </div>
                            </div>
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                @{
                                    if (image1 != string.Empty)
                                    {
                                        <img id="ImagePreview_Image1" src="@image1" class="responsive-img materialboxed"/>
                                    }
                                    else
                                    {
                                        <img id="ImagePreview_Image1" src="http://dummyimage.com/600x400/aab0b0/9cbfd6.jpg&text=crib" class="responsive-img"/>
                                    }
                                }
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="collapsible-header">
                            <i class="material-icons">edit</i>2
                        </div>
                        <div class="collapsible-body">
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                <input class="file-path validate" type="text"/>
                                <div class="btn">
                                    <span>Add</span>
                                    @Html.TextBoxFor(m => m.Image2, new {type = "file"})
                                </div>
                            </div>
                            <div class="input-field file-field col s10 m10 l10 offset-s1 offset-m1 offset-l1">
                                @{
                                    if (image1 != string.Empty)
                                    {
                                        <img id="ImagePreview_Image2" src="@image2" class="responsive-img materialboxed"/>
                                    }
                                    else
                                    {
                                        <img id="ImagePreview_Image2" src="http://dummyimage.com/600x400/aab0b0/9cbfd6.jpg&text=crib" class="responsive-img"/>
                                    }
                                }
                            </div>
                        </div>
                    </li>
                </ul>
            </fieldset>

            <div class="row">
                <div class="input-field  col s12 m12 l12">
                    <input type="hidden" value=""/>
                    <button id="Edit" class="btn-large waves-effect waves-light cyan">Save</button>
                </div>
            </div>
        </div>
    }
</div>

@Html.Partial("PartialViews/_CribsFloatingMenu")