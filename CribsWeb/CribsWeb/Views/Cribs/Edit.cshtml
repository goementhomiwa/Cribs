@model Cribs.Web.ViewModels.EditCribViewModel

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        var integers = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 }.Select(x => new SelectListItem
        {
            Value = x.ToString(),
            Text = x.ToString()
        });
        var Values = new SelectList(integers, "Value", "Text");
    

                <div class="form-horizontal">
                    <h4>RentCrib</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MonthlyRent, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.MonthlyRent, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MonthlyRent, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumberOfRooms, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.NumberOfRooms, Values, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AvailableDate.Value, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                            @Html.ValidationMessageFor(model => model.AvailableDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MainImage, new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.MainImage, new { type = "file", @class = "form-control", id = "CoverImage"})
                            <img id="main_image" src="data:image/gif;base64,@ViewBag.CoverImage" height="200px" width="200px" class="img-responsive">

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Choose 2 more photos", new { @class = "col-md-4 control-label" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.Image1, new { type = "file", @class = "form-control", id = "Image1" })
                            <img id="image_holder_1" src="http://placehold.it/100x100" height="200px" width="200px" class="img-responsive">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            @Html.TextBoxFor(m => m.Image2, new { type = "file", @class = "form-control" , id = "Image2"})
                            <img id="image_holder_1" src="http://placehold.it/100x100" height="200px" width="200px" class="img-responsive">
                        </div>
                    </div>
                   
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" value="Save" class="btn btn-success" /> <button class="btn btn-primary" id="EditImages">Edit Images</button>
                        </div>
                    </div>
                </div>
 
    }

        <div>
            @Html.ActionLink("Back to List", "Index", new { @class="btn btn-success"}) 


        </div>



@section scripts{
    <script type="text/javascript">
    $(function () {
        $(".datetimepicker").datetimepicker();

        var img = {};
        $("input[type=file]").change(function (e) {
            debugger;
            if (e.currentTarget.files[0]) {
                var reader = new FileReader();
                img = e.currentTarget.nextElementSibling;

                reader.onload = function (e) {
                    $("#"+img.id).attr("src", e.target.result);
                }
                reader.readAsDataURL(e.currentTarget.files[0]);
                alert("Imaged changed");

            }

            

        });
    });

    </script>
}
<script type="text/javascript">
   
</script>